name: build-and-release.yml
on:
  workflow_dispatch: ~
    inputs:
      version:
        description: 'Version. A version that is present in the S3 bucket. (like 0.5.0-alpha1'
        required: true
        default: ''
env:
  NODEJS_VERSION: 14
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_S3_NIGHTLY_BASEURI: https://wifi-tally-nightly.s3.eu-central-1.amazonaws.com
  AWS_S3_NIGHTLY_BUCKET: wifi-tally-nightly
  AWS_S3_NIGHTLY_REGION: eu-central-1

jobs:
  linux-x64:
    runs-on: "ubuntu-latest"
    env:
      TALLY_VERSION: "${{ github.event.inputs.version }}"
      TALLY_SOURCE: "https://wifi-tally-nightly.s3.eu-central-1.amazonaws.com/vtally-${{ github.event.inputs.version }}/vtally-${{ github.event.inputs.version }}.tgz"
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v2
        with:
          ref: main
      - name: Use node.js ${{ env.NODEJS_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODEJS_VERSION }}
      - name: Install dependencies
        run: |
          sudo apt-get update
          # needed for https://www.npmjs.com/package/midi
          sudo apt-get install -y libasound2-dev
 
          pip install -r scripts/requirements.txt

          ./scripts/set-version.py
 
          yarn install
      - name: Update package.json
        run: ./scripts/update-package.py
      - name: Build
        run: |
          ./node_modules/.bin/electron-rebuild
          yarn dist --config.npmRebuild=false
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_NIGHTLY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_NIGHTLY_KEY }}
          aws-region: ${{ env.AWS_S3_NIGHTLY_REGION }}
      - name: Push artifacts to AWS S3
        run: |
          ./scripts/upload-s3.py
  # linux-armv7:
  #   runs-on: "ubuntu-latest"
  #   env: 
  #     # force compilation for arm
  #     # @see https://github.com/nodejs/node-gyp/issues/829#issuecomment-665527032
  #     CC: arm-linux-gnueabihf-gcc
  #     CXX: arm-linux-gnueabihf-g++
  #     CC_host: "gcc -march=armv7"
  #     CXX_host: "g++ -march=armv7"
  #   steps:
  #     - name: Checkout the source code
  #       uses: actions/checkout@v2
  #       with:
  #         ref: main
  #     - name: Use node.js ${{ env.NODEJS_VERSION }}
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ env.NODEJS_VERSION }}
  #     - name: Install dependencies
  #       run: |
  #         sudo apt-get update

  #         # tools for arm cross compilation
  #         sudo apt-get install -y g++-arm-linux-gnueabihf gcc-arm-linux-gnueabihf

  #         # needed for https://www.npmjs.com/package/midi
  #         sudo apt-get install -y libasound2-dev
 
  #         pip3 install -r scripts/requirements.txt
 
  #         yarn install
 
  #     - name: Update package.json
  #       run: ./scripts/update-package.py
  #     - name: Build
  #       run: |
  #         # "force" to prevent using of pre-gyp
  #         ./node_modules/.bin/electron-rebuild --force
  #         yarn dist -- --armv7l --config.npmRebuild=false
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_S3_NIGHTLY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_S3_NIGHTLY_KEY }}
  #         aws-region: ${{ env.AWS_S3_NIGHTLY_REGION }}
  #     - name: Push artifacts to AWS S3
  #       run: |
  #         ./scripts/upload-s3.py
  windows:
    runs-on: "windows-latest"
    env:
      TALLY_VERSION: "${{ github.event.inputs.version }}"
      TALLY_SOURCE: "https://wifi-tally-nightly.s3.eu-central-1.amazonaws.com/vtally-${{ github.event.inputs.version }}/vtally-${{ github.event.inputs.version }}.tgz"
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v2
        with:
          ref: main
      - name: Use node.js ${{ env.NODEJS_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODEJS_VERSION }}
          
      - name: Install dependencies
        run: |
          pip3 install -r scripts/requirements.txt

          python3 ./scripts/set-version.py

          yarn install
      - name: Update package.json
        run: python3 ./scripts/update-package.py
      - name: Build
        run: |
          ./node_modules/.bin/electron-rebuild

          yarn dist --config.npmRebuild=false
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_NIGHTLY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_NIGHTLY_KEY }}
          aws-region: ${{ env.AWS_S3_NIGHTLY_REGION }}
      - name: Push artifacts to AWS S3
        run: |
          python ./scripts/upload-s3.py
  macosx-x64:
    runs-on: "macos-latest"
    env:
      TALLY_VERSION: "${{ github.event.inputs.version }}"
      TALLY_SOURCE: "https://wifi-tally-nightly.s3.eu-central-1.amazonaws.com/vtally-${{ github.event.inputs.version }}/vtally-${{ github.event.inputs.version }}.tgz"
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v2
        with:
          ref: main
      - name: Use node.js ${{ env.NODEJS_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODEJS_VERSION }}
      - name: Install dependencies
        run: |
          pip3 install -r scripts/requirements.txt

          ./scripts/set-version.py
 
          yarn install
      - name: Update package.json
        run: ./scripts/update-package.py
      - name: Build
        run: |
          ./node_modules/.bin/electron-rebuild
          yarn dist -- --config.npmRebuild=false
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_NIGHTLY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_NIGHTLY_KEY }}
          aws-region: ${{ env.AWS_S3_NIGHTLY_REGION }}
      - name: Push artifacts to AWS S3
        run: |
          ./scripts/upload-s3.py
